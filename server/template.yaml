AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: nodejs20.x
    CodeUri: .
    Architectures:
      - x86_64

Resources:
  # lambda function
  TheconversationWebScrapeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/theconversation/app.lambdaHandler
      # Events:
      #   Schedule:
      #     Type: ScheduleV2
      #     Properties:
      #       ScheduleExpression: rate(1 minute)
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref NewsTable
            Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
            PolicyName: NewsTableWritePolicy

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/theconversation/app.ts

  # eventbridge scheduler
  WebScrapingSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Run webscraping script every morning at 9 am"
      ScheduleExpression: "cron(0 9 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt TheconversationWebScrapeFunction.Arn
          Id: "TheconversationSchedule"

  # Rest api
  GetNewsListApi:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/api/getList.lambdaHandler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref NewsTable
            Effect: Allow
            Action:
              - dynamodb:Scan # get all items
            PolicyName: NewsTableGetPolicy
      Events:
        GetRequest:
          Type: Api
          Properties:
            Path: /news
            Method: get

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/api/getList.ts

  # dynamodb config
  NewsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: News

Outputs:
  GetNewsListApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for GetNewsListApi"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/news"

  GetNewsListApiEndpointLocalStack:
    Description: "API Gateway endpoint URL for GetNewsListApi local development"
    Value: !Sub "http://localhost:4566/restapis/${ServerlessRestApi}/Prod/_user_request_/news"
